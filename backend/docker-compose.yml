services:
  # ---------- Databases ----------
  auth-db:
    image: postgres:15
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U auth -d auth_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  feedback-db:
    image: postgres:15
    environment:
      POSTGRES_USER: feedback
      POSTGRES_PASSWORD: password
      POSTGRES_DB: feedback_db
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U feedback -d feedback_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # ---------- Services ----------
  auth-service:
    build:
      context: ./
      dockerfile: auth-service/Dockerfile
    environment:
      DB_HOST: auth-db
      DB_PORT: 5432
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_db
      DATABASE_URL: postgres://auth:password@auth-db:5432/auth_db?sslmode=disable
      JWT_SECRET: supersecretkey
      REDIS_ADDR: redis:6379
    depends_on:
      auth-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"

  feedback-service:
    build:
      context: ./
      dockerfile: feedback-service/Dockerfile
    environment:
      DB_HOST: feedback-db
      DB_PORT: 5432
      POSTGRES_USER: feedback
      POSTGRES_PASSWORD: password
      POSTGRES_DB: feedback_db
      DATABASE_URL: postgres://feedback:password@feedback-db:5432/feedback_db?sslmode=disable
      JWT_SECRET: supersecretkey
    depends_on:
      feedback-db:
        condition: service_healthy
    ports:
      - "8081:8080"
